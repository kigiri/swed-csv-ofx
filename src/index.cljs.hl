(page "index.html"
      (:require [inventi.csv :as csv]
                [inventi.core :as core]
                [inventi.ofx :as ofx]
                [hoplon.ui :as u]))

(def f "\"Sąskaitos Nr.\",\"\",\"Data\",\"Gavėjas\",\"Paaiškinimai\",\"Suma\",\"Valiuta\",\"D/K\",\"Įrašo Nr.\",\"Kodas\",\"Įmokos kodas\",\"Dok. Nr.\",\"Kliento kodas mokėtojo IS\",\"Kliento kodas\",\"Pradinis mokėtojas\",\"Galutinis gavėjas\",\r\n\"LT467300010071256495\",\"10\",\"2016-08-22\",\"\",\"Likutis pradžiai\",\"1052.71\",\"EUR\",\"K\",\"\",\"AS\",\"\",\"\",\r\n\"LT467300010071256495\",\"20\",\"2016-08-22\",\"\",\"PIRKINYS 6763765006733663 2016.08.17 18.00 EUR (021607) RIMI VYDUNO G. 4 VILNIUS\",\"18.00\",\"EUR\",\"D\",\"2016082200138010\",\"K\",\"\",\"\",\"\",\r\n\"LT467300010071256495\",\"20\",\"2016-08-22\",\"MARKS & SPENCER\",\"PIRKINYS 6763765006733663 2016.08.18 4.83 EUR (343080) MARKS & SPENCER           Vilnius            \",\"4.83\",\"EUR\",\"D\",\"2016082200449916\",\"K\",\"\",\"\",\"\",\r\n\"LT467300010071256495\",\"20\",\"2016-08-22\",\"MARKS & SPENCER\",\"PIRKINYS 6763765006733663 2016.08.18 1.68 EUR (328357) MARKS & SPENCER           Vilnius            \",\"1.68\",\"EUR\",\"D\",\"2016082200450099\",\"K\",\"\",\"\",\"\",\r\n\"LT467300010071256495\",\"20\",\"2016-08-22\",\"\",\"PIRKINYS 6763765006733663 2016.08.18 5.64 EUR (400678) RIMI VYDUNO G. 4 VILNIUS\",\"5.64\",\"EUR\",\"D\",\"2016082200568103\",\"K\",\"\",\"\",\"\",")

(defc file nil)
(defc= stmt (when file
              (core/parse-stmt (csv/read-csv file))))

(defc= ofx (when stmt
             (js/Blob. (array (ofx/stmt->ofx stmt)))))

(reset! file f)

(defn read-file [files]
  (let [f (aget files 0)
        r (js/FileReader.)]
    (set! (.-onload r)
      #(reset! file (.-result r)))
    (.readAsText r f)))

(html
  (head (link :href  "style.css" :rel  "stylesheet"))
  (body
    (input :type "file" :change #(read-file (.. % -target -files)))
    (if-tpl ofx
            (a :download "whatever.ofx" :href (cell= (.createObjectURL js/URL ofx)) "OFX file"))

    (for-tpl
        [t (cell= (:trx stmt))]
        (span
          (p
            (span :class "amount" (cell= (:amount t)))
            (span :class "date" (cell= (:date t)))
             (br)
             (cell= (:payee t))
             (br)
             (cell= (:memo t))
             (br)
             (cell= (:orig t)))))))
